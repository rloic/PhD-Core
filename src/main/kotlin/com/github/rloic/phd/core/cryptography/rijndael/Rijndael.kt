package com.github.rloic.phd.core.cryptography.rijndael

import javaextensions.util.reshape

object Rijndael {

    val SEQ_SIZE = 8

    val VALUE_RANGE = 0..255

    val NB_ROWS = 4

    val maxRounds = intArrayOf(
        10, 11, 12, 13, 14,
        11, 11, 12, 13, 14,
        12, 12, 12, 13, 14,
        13, 13, 13, 13, 14,
        14, 14, 14, 14, 14,
    ).reshape(5, 5)

    val shifts = intArrayOf(
        0, 1, 2, 3,
        0, 1, 2, 3,
        0, 1, 2, 3,
        0, 1, 2, 4,
        0, 1, 3, 4
    ).reshape(5, 4)

    val SBOX = intArrayOf(
        0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
        0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
        0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
        0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
        0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
        0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
        0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
        0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
        0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
        0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
        0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
        0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
        0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
        0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
        0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
        0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16
    )

    val SBOX_INV = intArrayOf(
        0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
        0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
        0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
        0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
        0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
        0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
        0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
        0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
        0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
        0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
        0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
        0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
        0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
        0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
        0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
        0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d
    )


    val OPTIMAL_SBOX_TRANSITION = intArrayOf(0, 31, 20, 24, 145, 8, 12, 166, 83, 98, 4, 72, 157, 180, 200, 21, 169, 225, 170, 30, 153, 58, 36, 147, 206, 183, 193, 204, 255, 199, 17, 163, 212, 158, 240, 69, 85, 92, 148, 175, 87, 198, 134, 146, 18, 187, 82, 118, 103, 164, 64, 160, 123, 245, 102, 249, 100, 113, 227, 129, 136, 68, 209, 22, 106, 224, 79, 121, 120, 13, 57, 195, 49, 88, 181, 208, 74, 128, 76, 231, 48, 178, 99, 142, 67, 159, 210, 56, 9, 168, 221, 90, 41, 47, 59, 172, 179, 140, 201, 152, 32, 46, 80, 230, 38, 154, 97, 28, 51, 95, 252, 203, 50, 192, 35, 236, 241, 254, 91, 150, 223, 213, 185, 66, 115, 156, 144, 177, 174, 111, 112, 143, 60, 244, 39, 116, 167, 196, 29, 94, 7, 62, 122, 16, 3, 226, 44, 191, 65, 73, 243, 235, 37, 141, 219, 119, 189, 61, 104, 184, 131, 81, 89, 105, 42, 101, 71, 63, 161, 176, 207, 1, 242, 246, 135, 26, 132, 171, 84, 14, 238, 182, 45, 202, 15, 53, 151, 137, 6, 25, 205, 107, 217, 27, 70, 77, 127, 197, 215, 165, 139, 190, 23, 124, 40, 222, 232, 233, 19, 93, 214, 5, 43, 96, 149, 109, 2, 86, 52, 218, 229, 162, 126, 253, 130, 155, 251, 114, 10, 186, 237, 247, 248, 125, 228, 138, 173, 54, 75, 188, 239, 194, 234, 110, 220, 133, 33, 11, 34, 250, 78, 108, 211, 55, 216, 117)
    val OPTIMAL_INV_SBOX_TRANSITION = intArrayOf(0, 171, 216, 144, 10, 211, 188, 140, 5, 88, 228, 247, 6, 69, 179, 184, 143, 30, 44, 208, 2, 15, 63, 202, 3, 189, 175, 193, 107, 138, 19, 1, 100, 246, 248, 114, 22, 152, 104, 134, 204, 92, 164, 212, 146, 182, 101, 93, 80, 72, 112, 108, 218, 185, 237, 253, 87, 70, 21, 94, 132, 157, 141, 167, 50, 148, 123, 84, 61, 35, 194, 166, 11, 149, 76, 238, 78, 195, 250, 66, 102, 161, 46, 8, 178, 36, 217, 40, 73, 162, 91, 118, 37, 209, 139, 109, 213, 106, 9, 82, 56, 165, 54, 48, 158, 163, 64, 191, 251, 215, 243, 129, 130, 57, 227, 124, 135, 255, 47, 155, 68, 67, 142, 52, 203, 233, 222, 196, 77, 59, 224, 160, 176, 245, 42, 174, 60, 187, 235, 200, 97, 153, 83, 131, 126, 4, 43, 23, 38, 214, 119, 186, 99, 20, 105, 225, 125, 12, 33, 85, 51, 168, 221, 31, 49, 199, 7, 136, 89, 16, 18, 177, 95, 236, 128, 39, 169, 127, 81, 96, 13, 74, 181, 25, 159, 122, 229, 45, 239, 156, 201, 147, 113, 26, 241, 71, 137, 197, 41, 29, 14, 98, 183, 111, 27, 190, 24, 170, 75, 62, 86, 252, 32, 121, 210, 198, 254, 192, 219, 154, 244, 90, 205, 120, 65, 17, 145, 58, 234, 220, 103, 79, 206, 207, 242, 151, 115, 230, 180, 240, 34, 116, 172, 150, 133, 53, 173, 231, 232, 55, 249, 226, 110, 223, 117, 28)


}